apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "beanbot.fullname" . }}
  labels:
    jke/workload: {{ include "beanbot.fullname" . }}
spec:
  progressDeadlineSeconds: 300
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      jke/workload: {{ include "beanbot.fullname" . }}
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ include "beanbot.fullname" . }}
        jke/workload: {{ include "beanbot.fullname" . }}
    spec:
      containers:
      - env:
        - name: LOG_LEVEL
          value: {{ .Values.logLevel }}
        - name: SLACK_BOT_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: slack-api-token
      {{- if eq .Values.global.env "dev" }}
        image: "beanbot:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: Never
      {{- else }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: Always
      {{- end }}
        name: beanbot
        ports:
        - containerPort: {{ .Values.containerPort }}
          name: tcp-beanbot
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        resources: {{- toYaml .Values.resources | nindent 10 }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "beanbot.serviceAccountName" . }}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
